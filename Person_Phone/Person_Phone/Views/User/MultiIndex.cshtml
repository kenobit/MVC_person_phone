@model IEnumerable<PersonDB_project.Models.UserViewModel>

@{
    ViewBag.Title = "MultiIndex";
}

<h2>MultiIndex</h2>

<p>
    @*Html.ActionLink("Create New", "Create")*@
    <button class="btn btn-success" onclick="Create()">Create new</button>

</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Age)
        </th>
        <th>
            @Html.DisplayName("Телефон")
        </th>
        <th>
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @if (item.Phones.Count == 0)
                {
                    <span> У пользователя нет телефона</span>
                }
                else
                {
                    foreach (var phone in item.Phones)
                    {
                        <span>
                            @Html.DisplayFor(modelItem => phone.PhoneType)
                        </span>

                        <span>
                            @Html.DisplayFor(modelItem => phone.PhoneNumber)
                        </span>
                        <br />
                    }
                }
            </td>

            <td>
                @*Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
    @Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
                <button class="btn btn-primary" onclick="Edit(@item.Id)">Edit</button>
                <button class="btn btn-info btn" onclick="Details(@item.Id)">Details</button>
                <button class="btn btn-danger btn" onclick="Delete(@item.Id)">Delete</button>
               @* @Ajax.ActionLink("Delete", "DeletePerson", "Home", new { id = item.Id }, new AjaxOptions { UpdateTargetId = "tableContainer" }, new { @class = "btn btn-danger" })*@
            </td>
        </tr>
    }

</table>

<div id="modalContainer">
    <!-- Modal -->
    <div id="myModal" class="modal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body" id="bodyModal">

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function Create() {
        $("#myModal").modal();
        $.ajax({
            method: "GET",
            url: '@Url.Action("Create", "User")',
            success: function (result) {
                $("#bodyModal").html(result);
            }
        })
    };

    function Edit(id) {
        $("#myModal").modal();
        $.ajax({
            method: "GET",
            url: '@Url.Action("Edit", "User")',
            data: { "id": id },
            success: function (result) {
                $("#bodyModal").html(result);
            }
        })
    };

    function Details(id) {
        $("#myModal").modal();
        $.ajax({
            method: "GET",
            url: '@Url.Action("Details", "User")',
            data: { "id": id },
            success: function (result) {
                $("#bodyModal").html(result);
            }
        })
    };

    function Delete(id) {
        $("#myModal").modal();
        $.ajax({
            method: "GET",
            url: '@Url.Action("Delete", "User")',
            data: { "id": id },
            success: function (result) {
                $("#bodyModal").html(result);
            }
        })
    };
</script>
