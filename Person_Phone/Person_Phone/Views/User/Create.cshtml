@model PersonDB_project.Models.UserViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@*@using (Ajax.BeginForm("Create", "User", new AjaxOptions {  OnSuccess = "CRUDResult", UpdateTargetId = "MainContainer" }))*@
@{
    <script language="javascript">
        var increment = 0;
        function add_input() {
            $("#Phones").append("<br /><div class='phone_group form-group form-inline'>Тип <input class='form-control' type=\"text\" name=\"PhoneType" + (increment += 1) + "\"/>" + " Номер " + "<input class='form-control' type=\"tel\" name=\"PhoneNumber" + increment + "\" /></div>")
        }
    </script>
    <form id="createForm">
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @id = "FirstName" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @id = "LastName" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @id = "Age" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Телефоны", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 col-md-offset-2" id="Phones">
                    <br />
                    <div class="phone_group form-group form-inline">Тип <input class='form-control' type="text" name="PhoneType" /> Номер <input class='form-control' type='tel' name='PhoneNumber' /></div>
                </div>
                <input type="button" class="btn btn-success  col-md-offset-2" name="add_btn" value="+" onclick='add_input()' />
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" id="SaveBtn" class="btn btn-success btn-lg btn-block" />
                </div>
            </div>
        </div>
    </form>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">

    $(document).ready(function () {
        $('#createForm').submit(function (e) {
            e.preventDefault();
            GatherAll();
         
        })
    });


    function GatherAll() {
   
        var data = {
            "FirstName": $("#FirstName").val(),
            "LastName": $("#LastName").val(),
            "Age": $("#Age").val(),
        };
        var phones = [];

        $.each($(".phone_group"), function () {
            var current = $(this).find("input");
            var extend = {
                "PhoneType": current[0].value,
                "PhoneNumber": current[1].value,
            };
            phones.push(extend);

        })
        $.extend(data,
            {
                "Phones": phones
            }
        );

        console.log(data);
        $.ajax({
            type: 'POST',
            data: data,
            url: "/User/Create/",
            success: CRUDResult
        });
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


